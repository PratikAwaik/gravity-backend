{"version":3,"sources":["components/Forums/Forums.js","components/Subreddit/MembersDisplay.js","components/Subreddit/SubredditProfile.js"],"names":["ForumPost","React","lazy","propTypes","posts","PropTypes","array","isRequired","Forums","className","map","post","Suspense","id","MembersDisplay","members","label","member","to","src","profilePic","alt","prefixedName","SubredditProfile","useState","subreddit","setSubreddit","loading","setLoading","useSelector","state","forums","currentUser","dispatch","useDispatch","params","useParams","history","useHistory","useEffect","a","axios","get","process","responseSubreddit","responseSubredditPosts","responseSubredditUsers","data","setPostsDispatcher","replace","updateIconCustomDispatcher","config","headers","Authorization","token","patch","updateSubredditIconDispatcher","communityIcon","handleClick","subredditCopy","Object","assign","subscribe","subscriptions","includes","filter","concat","updateCurrentUserSubscriptionDispatcher","subredditId","loadingIcon","style","backgroundColor","coverColor","moderating","ProfilePicture","icon","dispatcher","objKey","moderators","length","type","onClick","description","moment","createdAt","format"],"mappings":"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","file":"static/js/10.6dc23621.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ForumPost = React.lazy(() => import(\"./ForumPost\"));\n\nconst Forums = ({ posts }) => {\n  return (\n    <div className=\"forums-post-wrapper\">\n      {posts.map((post) => (\n        <React.Suspense key={post.id}>\n          <ForumPost post={post} />\n        </React.Suspense>\n      ))}\n    </div>\n  );\n};\n\nForumPost.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nexport default Forums;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst MembersDisplay = ({ members, label }) => {\n  return (\n    <div className=\"my-4 px-2 sm:px-0 w-full\">\n      <h3 className=\"font-bold tab tab-selected ml-0 mb-3\">{label}</h3>\n      <div className=\"w-full overflow-x-auto overflow-y-hidden\">\n        <div className=\"flex items-center px-3 w-max\">\n          {members.map((member) => (\n            <Link\n              to={`/user/${member.id}`}\n              key={member.id}\n              className=\"flex items-center mr-5\"\n            >\n              <img\n                className=\"w-7 h-7 rounded-full object-cover mr-2\"\n                src={member.profilePic}\n                alt=\"User Profile Pic\"\n              />\n              <span className=\"text-md hover:underline\">\n                {member.prefixedName}\n              </span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMembersDisplay.propTypes = {\n  members: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default MembersDisplay;\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { setPostsDispatcher } from \"../../dispatchers/forums\";\nimport { updateCurrentUserSubscriptionDispatcher } from \"../../dispatchers/user\";\nimport Forums from \"../Forums/Forums\";\nimport MembersDisplay from \"./MembersDisplay\";\nimport loadingIcon from \"../../images/loading-icon.gif\";\nimport ProfilePicture from \"../Editors/ProfilePicture\";\nimport { updateSubredditIconDispatcher } from \"../../dispatchers/subreddit\";\n\nconst SubredditProfile = () => {\n  const [subreddit, setSubreddit] = useState({});\n  const [loading, setLoading] = useState(true);\n  const { forums, currentUser } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const responseSubreddit = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/r/${params.id}`\n        );\n        const responseSubredditPosts = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/r/${params.id}/posts`\n        );\n        const responseSubredditUsers = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/r/${params.id}/users`\n        );\n        responseSubredditPosts.data.posts =\n          responseSubredditPosts.data.posts.map((post) => {\n            return {\n              ...post,\n              subreddit: responseSubreddit.data,\n            };\n          });\n        responseSubreddit.data = {\n          ...responseSubreddit.data,\n          ...responseSubredditPosts.data,\n          ...responseSubredditUsers.data,\n        };\n        setSubreddit(responseSubreddit.data);\n        setPostsDispatcher(dispatch, responseSubredditPosts.data.posts);\n      } catch (error) {\n        history.replace(\"/404\");\n      }\n      setLoading(false);\n    })();\n  }, [params.id, dispatch, history]);\n\n  const updateIconCustomDispatcher = async (dispatch, data) => {\n    const config = {\n      headers: {\n        Authorization: \"Bearer \" + currentUser.token,\n      },\n    };\n    await axios.patch(`/api/r/${subreddit.id}/update`, data, config);\n    updateSubredditIconDispatcher(dispatch, subreddit.id, data.communityIcon);\n  };\n\n  const handleClick = async () => {\n    const config = {\n      headers: {\n        Authorization: \"Bearer \" + currentUser.token,\n      },\n    };\n    const subredditCopy = Object.assign({}, subreddit);\n\n    let subscribe = false;\n\n    if (!currentUser.subscriptions.includes(subreddit.id)) {\n      subscribe = true;\n      subredditCopy.members = subredditCopy.members.concat(currentUser);\n    } else {\n      subredditCopy.members = subredditCopy.members.filter(\n        (member) => member.id !== currentUser.id\n      );\n    }\n\n    await axios.patch(\n      `/api/r/${subreddit.id}/subscribe`,\n      { subscribe },\n      config\n    );\n    setSubreddit(subredditCopy);\n    updateCurrentUserSubscriptionDispatcher(dispatch, {\n      subredditId: subreddit.id,\n      subscribe,\n    });\n  };\n\n  return loading ? (\n    <div className=\"w-screen h-screen flex items-center justify-center\">\n      <img src={loadingIcon} alt=\"Loading Icon\" />\n    </div>\n  ) : subreddit.id ? (\n    <div className=\"w-full pb-20\">\n      <div\n        className=\"w-full absolute top-0 h-56\"\n        style={{ backgroundColor: subreddit.coverColor }}\n      ></div>\n\n      <div className=\"max-w-4xl mx-auto mt-44\">\n        <div className=\"flex items-center flex-col\">\n          <div className=\"w-36 rounded-full z-10 bg-white\">\n            {currentUser.id && currentUser.moderating.includes(subreddit.id) ? (\n              <ProfilePicture\n                icon={subreddit.communityIcon}\n                dispatcher={updateIconCustomDispatcher}\n                objKey=\"communityIcon\"\n              />\n            ) : (\n              <div className=\"w-full h-full rounded-full mx-auto mb-5 border-4 border-theme-white flex items-center justify-center\">\n                <img\n                  className=\"w-32 h-32 rounded-full object-cover\"\n                  src={subreddit.communityIcon}\n                  alt=\"Subreddit Icon\"\n                />\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-4\">\n            <span className=\"text-2xl font-bold text-theme-gray\">\n              {subreddit.prefixedName}\n            </span>\n          </div>\n\n          {currentUser.id ? (\n            subreddit.moderators.length < 2 &&\n            currentUser.moderating.includes(subreddit.id) ? null : (\n              <button\n                type=\"button\"\n                className=\"px-4 py-0.5 w-24 flex items-center justify-center text-md border-2 rounded-md border-gray-400 hover:bg-gray-200 group\"\n                onClick={handleClick}\n              >\n                {currentUser.subscriptions.includes(subreddit.id) ? (\n                  <>\n                    <span className=\"group-hover:hidden\">Joined</span>\n                    <span className=\"hidden group-hover:inline-block\">\n                      Leave\n                    </span>\n                  </>\n                ) : (\n                  \"Join\"\n                )}\n              </button>\n            )\n          ) : null}\n        </div>\n\n        <div className=\"mt-4 mb-8 px-2\">\n          <div className=\"mb-4\">\n            <h3 className=\"font-bold mb-2 tab tab-selected ml-0\">\n              About the Community\n            </h3>\n            <div className=\"px-3\">\n              <p className=\"font-bold my-2\">\n                About:{\" \"}\n                <span className=\"font-normal\">{subreddit.description}</span>\n              </p>\n              <p className=\"font-bold my-2\">\n                Established On:{\" \"}\n                <span className=\"font-normal\">\n                  {moment(subreddit.createdAt).format(\"LL\")}\n                </span>\n              </p>\n              <p className=\"font-bold my-2\">\n                Members:{\" \"}\n                <span className=\"font-normal\">{subreddit.members.length}</span>\n              </p>\n            </div>\n          </div>\n\n          <MembersDisplay members={subreddit.moderators} label=\"Moderators\" />\n          <MembersDisplay members={subreddit.members} label=\"Members\" />\n        </div>\n\n        <div>\n          <h3 className=\"font-bold tab tab-selected mb-3\">Posts</h3>\n          {forums.length > 0 ? (\n            <Forums posts={forums} />\n          ) : (\n            <span className=\"text-2xl block text-center\">No posts yet...</span>\n          )}\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default SubredditProfile;\n"],"sourceRoot":""}