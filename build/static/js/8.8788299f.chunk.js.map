{"version":3,"sources":["components/Comments/CommentFooter.js","components/Comments/EditComment.js","components/Comments/CommentBody.js","components/Comments/CommentHeader.js","components/Comments/Comment.js","components/Comments/Comments.js"],"names":["CommentFooter","comment","setReplyClicked","setToEdit","currentUser","useSelector","state","dispatch","useDispatch","hasUpvotedAlready","hasUpvotedAlreadyHelper","id","hasDownvotedAlready","hasDownvotedAlreadyHelper","handleDeleteComment","a","swalObject","title","showCancelButton","showConfirmButton","confirmButtonText","cancelButtonText","position","icon","customClass","confirmButton","cancelButton","Swal","fire","isConfirmed","deleteCommentDispatcher","post","token","timer","className","username","user","onClick","handleUpvoteHelper","upvotes","to","handleDownvoteHelper","downvotes","EditComment","useState","content","editorState","setEditorState","handleSubmit","e","preventDefault","commentData","editCommentDispatcher","onSubmit","FancyEditor","editorContent","setEditorContent","isPost","type","CommentBody","toEdit","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","CommentHeader","src","profilePic","astronautPicture","alt","posts","find","moment","createdAt","fromNow","editedAt","Comment","replyClicked","location","useLocation","handleCreateComment","trim","repliedTo","level","createCommentDispatcher","commentBars","i","push","style","marginLeft","height","hash","paddingLeft","Comments","comments","orderComments","useEffect","getAllCommentsDispatcher","unsetCommentsDispatcher","map"],"mappings":"oNA6KeA,IAhKO,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UAC3CC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eAC3CG,EAAWC,cAEXC,EAAoBC,YACxBN,EACAH,EAAQU,GACR,mBAEIC,EAAsBC,YAC1BT,EACAH,EAAQU,GACR,qBAuBIG,EAAmB,uCAAG,4BAAAC,EAAA,6DACpBC,EAAa,CACjBC,MAAO,gBACPC,kBAAkB,EAClBC,mBAAmB,EACnBC,kBAAmB,kBACnBC,iBAAkB,eAClBC,SAAU,SACVC,KAAM,UACNC,YAAa,CACXC,cACE,uEACFC,aAAc,uDAZQ,SAgBLC,IAAKC,KAAKZ,GAhBL,kBAiBfa,YAjBe,0CAmBhBC,YACJvB,EACAN,EAAQ8B,KACR9B,EAAQU,GACRP,EAAY4B,OAvBQ,OAyBtBL,IAAKC,KAAK,CACRL,KAAM,UACNN,MAAO,gCACPE,mBAAmB,EACnBc,MAAO,MA7Ba,kDAgCtBN,IAAKC,KAAK,CACRL,KAAM,QACNN,MAAM,EAAD,GACLE,mBAAmB,EACnBc,MAAO,MApCa,0DAAH,qDA0CzB,OACE,sBAAKC,UAAU,wDAAf,UACE,sBAAKA,UAAU,oBAAf,UAEG9B,EAAY+B,SACX,sBACED,UAAS,iCACPzB,EAAoB,mBAAqB,GADlC,aAEJR,EAAQmC,MAAQ,uBAHvB,UAKE,mBACEF,UAAS,sBACPzB,EAAoB,OAAS,OADtB,6CAGT4B,QA5EqB,WAC/BC,YACE/B,EACAH,EACAH,EACAQ,EACAG,MAwEM,sBAAMsB,UAAU,uBAAhB,SAAwCjC,EAAQsC,aAGlD,eAAC,IAAD,CAAMC,GAAG,SAASN,UAAU,yBAA5B,UACE,mBAAGA,UAAU,8DACb,sBAAMA,UAAU,uBAAhB,SAAwCjC,EAAQsC,aAKnDnC,EAAY+B,SACX,sBACED,UAAS,iCACPtB,EAAsB,iBAAmB,GADlC,aAEJX,EAAQmC,MAAQ,uBAHvB,UAKE,mBACEF,UAAS,sBACPtB,EAAsB,OAAS,OADxB,kEAGTyB,QAxFuB,WACjCI,YACElC,EACAH,EACAH,EACAQ,EACAG,MAoFM,sBAAMsB,UAAU,uBAAhB,SAAwCjC,EAAQyC,eAGlD,eAAC,IAAD,CAAMF,GAAG,SAASN,UAAU,yBAA5B,UACE,mBAAGA,UAAU,mFACb,sBAAMA,UAAU,uBAAhB,SAAwCjC,EAAQyC,eAIpD,sBACER,UAAS,sDACNjC,EAAQmC,MAAQ,uBAEnBC,QAAS,kBAAMnC,GAAmBA,GAAgB,IAJpD,UAME,mBAAGgC,UAAU,4CACb,sBAAMA,UAAU,OAAhB,yBAIHjC,EAAQmC,MAAQnC,EAAQmC,KAAKzB,KAAOP,EAAYO,IAC/C,qBAAKuB,UAAU,oBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,wBACEG,QAAS,kBAAMlC,GAAaA,GAAU,IACtC+B,UAAU,OAFZ,SAIE,mBAAGA,UAAU,8EAEf,wBAAQG,QAAS,kBAAMlC,GAAaW,KAApC,SACE,mBAAGoB,UAAU,6F,4ICpFZS,EAnEK,SAAC,GAA4B,IAA1B1C,EAAyB,EAAzBA,QAASE,EAAgB,EAAhBA,UAC9B,EAAsCyC,mBAAS3C,EAAQ4C,SAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACM3C,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eAC3CG,EAAWC,cAEXwC,EAAY,uCAAG,WAAOC,GAAP,eAAAlC,EAAA,6DACnBkC,EAAEC,iBAEIC,EAAc,CAClBN,QAASC,GAJQ,SAObM,YACJ7C,EACAN,EAAQ8B,KACR9B,EAAQU,GACRwC,EACA/C,EAAY4B,OAZK,uBAcEL,IAAKC,KAAK,CAC7BX,MAAO,+BACPM,KAAM,UACNC,YAAa,CACXC,cAAe,qCAlBA,cAqBRI,aACT1B,GAAU,GAtBO,2CAAH,sDA0BlB,OACE,qBAAK+B,UAAU,oDAAf,SACE,uBAAMmB,SAAUL,EAAhB,UACE,cAACM,EAAA,EAAD,CACEC,cAAeT,EACfU,iBAAkBT,EAClBU,QAAQ,IAGV,sBAAKvB,UAAU,yBAAf,UACE,wBACEwB,KAAK,SACLxB,UAAU,+FAFZ,oBAMA,wBACEwB,KAAK,SACLxB,UAAU,yEACVG,QAAS,WACPlC,GAAU,IAJd,6BC5BKwD,IArBK,SAAC,GAAoC,IAAlC1D,EAAiC,EAAjCA,QAAS2D,EAAwB,EAAxBA,OAAQzD,EAAgB,EAAhBA,UACtC,OAAOyD,EACL,cAAC,EAAD,CAAa3D,QAASA,EAASE,UAAWA,IAE1C,qBACE+B,UAAU,8CACV2B,wBAAyB,CACvBC,OAAQ7D,EAAQ4C,QACZkB,IAAUC,SAAS/D,EAAQ4C,SAC3B,iB,kICmCGoB,EA3CO,SAAC,GAAiB,IAAfhE,EAAc,EAAdA,QACvB,OACE,sBAAKiC,UAAU,qEAAf,UACE,qBACEA,UAAU,uDACVgC,IAAKjE,EAAQmC,KAAOnC,EAAQmC,KAAK+B,WAAaC,IAC9CC,IAAI,qBAGLpE,EAAQmC,KACP,cAAC,IAAD,CACEI,GAAE,gBAAWvC,EAAQmC,KAAKzB,IAC1BuB,UAAU,8CAFZ,SAIGjC,EAAQmC,KAAKD,WAGhB,qBAAKD,UAAU,oBAAf,uBAGDjC,EAAQmC,MACPnC,EAAQmC,KAAKkC,MAAMC,MAAK,SAACxC,GAAD,OAAUA,IAAS9B,EAAQ8B,SACjD,sBAAMG,UAAU,0CAAhB,gBAGHjC,EAAQmC,MACP,qCACE,qBAAKF,UAAU,6CACf,sBAAMA,UAAU,eAAhB,SACGsC,IAAOvE,EAAQwE,WAAWC,eAKhCzE,EAAQ0E,UAAY,sBAAMzC,UAAU,OAAhB,0B,0CCkEZ0C,EAhGC,SAAC,GA2Bf,IA3BgC,IAAf3E,EAAc,EAAdA,QACjB,EAAwC2C,oBAAS,GAAjD,mBAAOiC,EAAP,KAAqB3E,EAArB,KACA,EAA4B0C,oBAAS,GAArC,mBAAOgB,EAAP,KAAezD,EAAf,KACA,EAA0CyC,mBAAS,IAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KACMpD,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eAC3CG,EAAWC,cACXsE,EAAWC,cAEXC,EAAmB,uCAAG,WAAO/B,GAAP,eAAAlC,EAAA,6DAC1BkC,EAAEC,iBACIC,EAAc,CAClBN,QAASU,EAAc0B,OACvBC,UAAWjF,EAAQU,GACnBwE,MAAOlF,EAAQkF,MAAQ,GALC,SAOpBC,YACJ7E,EACAN,EAAQ8B,KACR3B,EAAY4B,MACZmB,GAXwB,OAa1BK,EAAiB,IACjBtD,GAAgB,GAdU,2CAAH,sDAiBnBmF,EAAc,GAEXC,EAAI,EAAGA,GAAKrF,EAAQkF,MAAOG,IAClCD,EAAYE,KACV,qBAEErD,UAAS,kDACTsD,MAAO,CACLC,WAAY,GAAWH,EAAI,KAC3BI,OAAQJ,IAAMrF,EAAQkF,MAAQ,oBAAsB,SAJjDG,IAUX,OACE,sBACEpD,UAAS,mDACP,IAAMjC,EAAQU,KAAOmE,EAASa,MAAQ,4BAExChF,GAAIV,EAAQU,GAJd,UAME,qBAAKuB,UAAU,+DAAf,SACGmD,IAGH,sBACEnD,UAAU,yDACVsD,MAAO,CAAEI,YAAa,GAAW3F,EAAQkF,MAAQ,MAFnD,UAIE,cAAC,EAAD,CAAelF,QAASA,IACxB,cAAC0D,EAAA,EAAD,CAAa1D,QAASA,EAAS2D,OAAQA,EAAQzD,UAAWA,IAC1D,cAACH,EAAA,EAAD,CACEC,QAASA,EACTC,gBAAiBA,EACjBC,UAAWA,IAEZ0E,GACC,sBAAK3C,UAAU,oBAAf,UACE,cAACoB,EAAA,EAAD,CACEC,cAAeA,EACfC,iBAAkBA,EAClBC,QAAQ,IAGV,wBACEC,KAAK,SACLxB,UAAU,mHACVG,QAAS2C,EAHX,qBAQA,wBACEtB,KAAK,SACLxB,UAAU,oHACVG,QAAS,kBAAMnC,GAAgB,IAHjC,8B,OCxDG2F,UAtBE,SAAC,GAAc,IAAZ9D,EAAW,EAAXA,KACZ+D,EAAWzF,aAAY,SAACC,GAAD,OAAWyF,YAAczF,EAAMwF,aACtDvF,EAAWC,cAOjB,OALAwF,qBAAU,WAER,OADAC,YAAyB1F,EAAUwB,EAAKpB,IACjC,kBAAMuF,YAAwB3F,MACpC,CAACA,EAAUwB,EAAKpB,KAEZoB,EACL,8BACG+D,EAASK,KAAI,SAAClG,GAAD,OACZ,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQU,SAGxB","file":"static/js/8.8788299f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  handleDownvoteHelper,\n  handleUpvoteHelper,\n  hasDownvotedAlreadyHelper,\n  hasUpvotedAlreadyHelper,\n} from \"../../helpers\";\nimport Swal from \"sweetalert2\";\nimport { deleteCommentDispatcher } from \"../../dispatchers/comments\";\n\nconst CommentFooter = ({ comment, setReplyClicked, setToEdit }) => {\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n\n  const hasUpvotedAlready = hasUpvotedAlreadyHelper(\n    currentUser,\n    comment.id,\n    \"commentsUpvoted\"\n  );\n  const hasDownvotedAlready = hasDownvotedAlreadyHelper(\n    currentUser,\n    comment.id,\n    \"commentsDownvoted\"\n  );\n\n  const handleCommentUpvoteClick = () => {\n    handleUpvoteHelper(\n      dispatch,\n      currentUser,\n      comment,\n      hasUpvotedAlready,\n      hasDownvotedAlready\n    );\n  };\n\n  const handleCommentDownvoteClick = () => {\n    handleDownvoteHelper(\n      dispatch,\n      currentUser,\n      comment,\n      hasUpvotedAlready,\n      hasDownvotedAlready\n    );\n  };\n\n  const handleDeleteComment = async () => {\n    const swalObject = {\n      title: \"Are you sure?\",\n      showCancelButton: true,\n      showConfirmButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, go back!\",\n      position: \"center\",\n      icon: \"warning\",\n      customClass: {\n        confirmButton:\n          \"bg-theme-green text-theme-white border border-theme-green rounded-md\",\n        cancelButton: \"bg-theme-gray, border border-theme-gray rounded-md\",\n      },\n    };\n\n    const result = await Swal.fire(swalObject);\n    if (result.isConfirmed) {\n      try {\n        await deleteCommentDispatcher(\n          dispatch,\n          comment.post,\n          comment.id,\n          currentUser.token\n        );\n        Swal.fire({\n          icon: \"success\",\n          title: \"Comment deleted Successfully!\",\n          showConfirmButton: false,\n          timer: 2000,\n        });\n      } catch (err) {\n        Swal.fire({\n          icon: \"error\",\n          title: err,\n          showConfirmButton: false,\n          timer: 2000,\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"ml-6 flex items-center comment-footer justify-between\">\n      <div className=\"flex items-center\">\n        {/* Upvote */}\n        {currentUser.username ? (\n          <div\n            className={`mr-2 flex items-center ${\n              hasUpvotedAlready ? \"text-theme-green\" : \"\"\n            } ${!comment.user && \"pointer-events-none\"}`}\n          >\n            <i\n              className={`ri-rocket-2-${\n                hasUpvotedAlready ? \"fill\" : \"line\"\n              } cursor-pointer text-base sm:text-xl z-10`}\n              onClick={handleCommentUpvoteClick}\n            ></i>\n            <span className=\"text-base sm:text-xl\">{comment.upvotes}</span>\n          </div>\n        ) : (\n          <Link to=\"/login\" className=\"mr-2 flex items-center\">\n            <i className=\"ri-rocket-2-line cursor-pointer text-base sm:text-xl z-10\"></i>\n            <span className=\"text-base sm:text-xl\">{comment.upvotes}</span>\n          </Link>\n        )}\n\n        {/* downvote */}\n        {currentUser.username ? (\n          <div\n            className={`mr-4 flex items-center ${\n              hasDownvotedAlready ? \"text-theme-red\" : \"\"\n            } ${!comment.user && \"pointer-events-none\"}`}\n          >\n            <i\n              className={`ri-rocket-2-${\n                hasDownvotedAlready ? \"fill\" : \"line\"\n              } transform rotate-180 cursor-pointer text-base sm:text-xl z-10`}\n              onClick={handleCommentDownvoteClick}\n            ></i>\n            <span className=\"text-base sm:text-xl\">{comment.downvotes}</span>\n          </div>\n        ) : (\n          <Link to=\"/login\" className=\"mr-4 flex items-center\">\n            <i className=\"ri-rocket-2-line transform rotate-180 cursor-pointer text-base sm:text-xl z-10\"></i>\n            <span className=\"text-base sm:text-xl\">{comment.downvotes}</span>\n          </Link>\n        )}\n\n        <div\n          className={`mr-4 flex items-center cursor-pointer z-10 ${\n            !comment.user && \"pointer-events-none\"\n          }`}\n          onClick={() => setReplyClicked && setReplyClicked(true)}\n        >\n          <i className=\"ri-reply-line mr-1 text-base sm:text-xl\"></i>\n          <span className=\"mr-1\">reply</span>\n        </div>\n      </div>\n\n      {comment.user && comment.user.id === currentUser.id && (\n        <div className=\"flex items-center\">\n          <div className=\"flex items-center mr-5\">\n            <button\n              onClick={() => setToEdit && setToEdit(true)}\n              className=\"mr-3\"\n            >\n              <i className=\"ri-edit-2-line cursor-pointer text-base sm:text-xl z-10 text-theme-blue\"></i>\n            </button>\n            <button onClick={() => setToEdit && handleDeleteComment()}>\n              <i className=\"ri-delete-bin-5-line cursor-pointer text-base sm:text-xl z-10 text-theme-red\"></i>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nCommentFooter.propTypes = {\n  comment: PropTypes.object.isRequired,\n  setReplyClicked: PropTypes.func,\n  setToEdit: PropTypes.func,\n};\n\nexport default CommentFooter;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FancyEditor from \"../Editors/FancyEditor\";\nimport { editCommentDispatcher } from \"../../dispatchers/comments\";\nimport Swal from \"sweetalert2\";\n\nconst EditComment = ({ comment, setToEdit }) => {\n  const [editorState, setEditorState] = useState(comment.content);\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const commentData = {\n      content: editorState,\n    };\n\n    await editCommentDispatcher(\n      dispatch,\n      comment.post,\n      comment.id,\n      commentData,\n      currentUser.token\n    );\n    const result = await Swal.fire({\n      title: \"Comment updated Sucessfully!\",\n      icon: \"success\",\n      customClass: {\n        confirmButton: \"bg-theme-green text-theme-white\",\n      },\n    });\n    if (result.isConfirmed) {\n      setToEdit(false);\n    }\n  };\n\n  return (\n    <div className=\"mt-5 create-post-container max-w-3xl mx-auto mb-5\">\n      <form onSubmit={handleSubmit}>\n        <FancyEditor\n          editorContent={editorState}\n          setEditorContent={setEditorState}\n          isPost={true}\n        />\n\n        <div className=\"flex items-center mt-5\">\n          <button\n            type=\"submit\"\n            className=\"px-2 py-1 border-2 border-theme-green rounded-md hover:bg-theme-green hover:text-theme-white\"\n          >\n            Update\n          </button>\n          <button\n            type=\"button\"\n            className=\"ml-3 px-2 py-1 border-2 border-theme-red rounded-md hover:bg-theme-red\"\n            onClick={() => {\n              setToEdit(false);\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nEditComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  setToEdit: PropTypes.func.isRequired,\n};\n\nexport default EditComment;\n","import React from \"react\";\nimport DOMPurify from \"dompurify\";\nimport PropTypes from \"prop-types\";\nimport EditComment from \"./EditComment\";\n\nconst CommentBody = ({ comment, toEdit, setToEdit }) => {\n  return toEdit ? (\n    <EditComment comment={comment} setToEdit={setToEdit} />\n  ) : (\n    <div\n      className=\"mb-2 pl-8 text-sm sm:text-base comment-body\"\n      dangerouslySetInnerHTML={{\n        __html: comment.content\n          ? DOMPurify.sanitize(comment.content)\n          : \"[deleted]\",\n      }}\n    ></div>\n  );\n};\n\nCommentBody.propTypes = {\n  comment: PropTypes.object.isRequired,\n  toEdit: PropTypes.bool,\n  setToEdit: PropTypes.func,\n};\n\nexport default CommentBody;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport astronautPicture from \"../../images/astronaut.png\";\n\nconst CommentHeader = ({ comment }) => {\n  return (\n    <div className=\"flex items-center text-sm text-theme-gray mb-2 z-10 comment-header\">\n      <img\n        className=\"w-6 h-6 sm:w-7 sm:h-7 rounded-full mr-2 object-cover\"\n        src={comment.user ? comment.user.profilePic : astronautPicture}\n        alt=\"User Profile Pic\"\n      />\n\n      {comment.user ? (\n        <Link\n          to={`/user/${comment.user.id}`}\n          className=\"mr-2 comment-user font-bold hover:underline\"\n        >\n          {comment.user.username}\n        </Link>\n      ) : (\n        <div className=\"mr-2 comment-user\">[deleted]</div>\n      )}\n\n      {comment.user &&\n        comment.user.posts.find((post) => post === comment.post) && (\n          <span className=\"text-theme-green text-sm mr-2 font-bold\">OP</span>\n        )}\n\n      {comment.user && (\n        <>\n          <div className=\"w-1 h-1 bg-theme-black rounded-full mr-2\"></div>\n          <span className=\"comment-time\">\n            {moment(comment.createdAt).fromNow()}\n          </span>\n        </>\n      )}\n\n      {comment.editedAt && <span className=\"ml-1\">(edited)</span>}\n    </div>\n  );\n};\n\nCommentHeader.propTypes = {\n  comment: PropTypes.object.isRequired,\n};\n\nexport default CommentHeader;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CommentHeader from \"./CommentHeader\";\nimport CommentBody from \"./CommentBody\";\nimport CommentFooter from \"./CommentFooter\";\nimport FancyEditor from \"../Editors/FancyEditor\";\nimport { createCommentDispatcher } from \"../../dispatchers/comments\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\n\nconst Comment = ({ comment }) => {\n  const [replyClicked, setReplyClicked] = useState(false);\n  const [toEdit, setToEdit] = useState(false);\n  const [editorContent, setEditorContent] = useState(\"\");\n  const currentUser = useSelector((state) => state.currentUser);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleCreateComment = async (e) => {\n    e.preventDefault();\n    const commentData = {\n      content: editorContent.trim(),\n      repliedTo: comment.id,\n      level: comment.level + 1,\n    };\n    await createCommentDispatcher(\n      dispatch,\n      comment.post,\n      currentUser.token,\n      commentData\n    );\n    setEditorContent(\"\");\n    setReplyClicked(false);\n  };\n\n  const commentBars = [];\n\n  for (let i = 0; i <= comment.level; i++) {\n    commentBars.push(\n      <div\n        key={i}\n        className={`bg-theme-white absolute z-0 pt-2 w-0.5 bottom-0`}\n        style={{\n          marginLeft: 16 * 1.5 * i + \"px\",\n          height: i === comment.level ? \"calc(100% - 50px)\" : \"100%\",\n        }}\n      ></div>\n    );\n  }\n\n  return (\n    <div\n      className={`w-full h-full flex items-center relative ${\n        \"#\" + comment.id === location.hash && \"rounded-md bg-yellow-100\"\n      }`}\n      id={comment.id}\n    >\n      <div className=\"absolute left-3 z-0 h-full flex items-center justify-between\">\n        {commentBars}\n      </div>\n\n      <div\n        className=\"flex flex-col pt-3 pb-2 w-full h-full relative comment\"\n        style={{ paddingLeft: 16 * 1.5 * comment.level + \"px\" }}\n      >\n        <CommentHeader comment={comment} />\n        <CommentBody comment={comment} toEdit={toEdit} setToEdit={setToEdit} />\n        <CommentFooter\n          comment={comment}\n          setReplyClicked={setReplyClicked}\n          setToEdit={setToEdit}\n        />\n        {replyClicked && (\n          <div className=\"my-2 sm:my-4 pl-6\">\n            <FancyEditor\n              editorContent={editorContent}\n              setEditorContent={setEditorContent}\n              isPost={false}\n            />\n\n            <button\n              type=\"button\"\n              className=\"border-2 border-theme-green text-sm sm:text-base rounded-md px-2 py-1 my-2 hover:bg-theme-green hover:text-white\"\n              onClick={handleCreateComment}\n            >\n              Comment\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"border-2 border-theme-red text-sm sm:text-base rounded-md px-2 py-1 my-2 hover:bg-theme-red hover:text-white ml-3\"\n              onClick={() => setReplyClicked(false)}\n            >\n              Cancel\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n};\n\nexport default Comment;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Comment from \"./Comment\";\nimport {\n  getAllCommentsDispatcher,\n  unsetCommentsDispatcher,\n} from \"../../dispatchers/comments\";\nimport { orderComments } from \"../../helpers\";\n\nconst Comments = ({ post }) => {\n  const comments = useSelector((state) => orderComments(state.comments));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getAllCommentsDispatcher(dispatch, post.id);\n    return () => unsetCommentsDispatcher(dispatch);\n  }, [dispatch, post.id]);\n\n  return post ? (\n    <div>\n      {comments.map((comment) => (\n        <Comment key={comment.id} comment={comment} />\n      ))}\n    </div>\n  ) : null;\n};\n\nComments.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default Comments;\n"],"sourceRoot":""}